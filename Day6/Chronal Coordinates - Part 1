#include <fstream>
#include <cstring>
using namespace std;
ifstream fin("coordinates.in");
ofstream fout("coordinates.out");
int i,j,n,nr,x,y,p,u,a[365][365],b[365][365],fr[51],ok[51],maxim;
int dx[]={0,-1,0,1,0},dy[]={0,0,1,0,-1};
char s[21];
struct numar{
    int l,c,v;
}q[1300000];
int numar(){
    int w=0;
    while(s[i]<'0' || s[i]>'9')
        i++;
    while(s[i]>='0' && s[i]<='9'){
        w=w*10+s[i]-'0';
        i++;
    }
    return w;
}
void coada(){
    int l,c,lnou,cnou,r;
    while(p<=u){
        l=q[p].l;
        c=q[p].c;
        for(r=1;r<=4;r++){
            lnou=l+dx[r];
            cnou=c+dy[r];
            if(lnou<0 || lnou>n || cnou<0 || cnou>n)
                continue;
            if(a[lnou][cnou]==a[l][c]+1 && b[lnou][cnou]!=q[p].v){
                    q[++u].l=lnou;
                    q[u].c=cnou;
                    q[u].v=q[p].v;
                    b[lnou][cnou]=-1;
            }
            else if(b[lnou][cnou]==0 || a[lnou][cnou]>a[l][c]+1){
                a[lnou][cnou]=a[l][c]+1;
                q[++u].l=lnou;
                q[u].c=cnou;
                q[u].v=q[p].v;
                b[lnou][cnou]=q[p].v;
            }
        }
        p++;
    }
}
 int main(){
    n=360; p=1;
    while(fin.getline(s,20)){
      i=0; nr++;
      y=numar(); x=numar();
      q[++u].l=x; 
      q[u].c=y;
      q[u].v=nr;
      a[x][y]=1;
      b[x][y]=nr;
    }
    coada();
    for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
            if(b[i][j]>0 && fr[b[i][j]]!=-1)
                if(i==1 || i==n || j==1 || j==n)  fr[b[i][j]]=-1;
                else fr[b[i][j]]++;
    for(i=1;i<=nr;i++)
        if(ok[i]==0 && fr[i]>maxim)
            maxim=fr[i];
    fout<<maxim;
    return 0;
 }
