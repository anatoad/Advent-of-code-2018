#include <fstream>
#include <cstring>
using namespace std;
ifstream fin("sum.in");
ofstream fout("sum.out");
int i,v[30][30],j,k,ok,q[300],st,dr,x,timp;
char s[51],ID,nr;
char numar(){
    while(s[i]<'A' || s[i]>'Z')
        i++;
    i++;
    return s[i-1];
}
struct numar{
    int t,nr;
}d[10];
int main()
{
    while(fin.getline(s,50)){
        i=1; j++;
        nr=numar();
        ID=numar();
        v[0][ID-'A'+1]++;
        v[nr-'A'+1][ID-'A'+1]=1;
    }
    for(i=1;i<=26;i++)
        if(v[0][i]==0)
            q[++dr]=i;
    for(i=1;i<=5;i++)
        d[i].nr=-1;
    while(!ok){
        for(i=1;i<=5;i++)
            if (d[i].t==0){
                if(d[i].nr!=-1)
					for (j=1;j<=26;j++)
						if (v[d[i].nr][j]==1) {
							v[0][j]--;
							if (v[0][j]==0)
								q[++dr]=j;
						}
				if(dr!=0){
					d[i].nr=q[dr--];
					d[i].t=60+q[dr];
					if(dr!=0){
						i = -1;
						continue;
					}
				}
				else
					d[i].nr=-1;
         }
            ok = 1;
		    int minim=10000;
            for (i=1;i<=5;i++)
                if(d[i].nr!=-1){
                    ok=0;
                    minim=min(minim,d[i].t);
                }
            if (ok==1){
                fout<<timp;
                return 0;
            }
            timp+=minim;
            for(i=1;i<=5;i++)
                if(d[i].nr!=-1)
                    d[i].t-=minim;
    }
    fout<<timp;
   return 0;
}
